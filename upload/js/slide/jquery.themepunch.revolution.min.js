(function (e, t) { function n(t, n) { t.find(".defaultimg").each(function (i) { p(e(this), n); n.height = Math.round(n.startheight * (n.width / n.startwidth)); t.height(n.height); p(e(this), n); try { t.parent().find(".tp-bannershadow").css({ width: n.width }) } catch (s) { } var o = t.find("li:eq(" + n.act + ") .slotholder"); var u = t.find("li:eq(" + n.next + ") .slotholder"); y(t); u.find(".defaultimg").css({ opacity: 0 }); o.find(".defaultimg").css({ opacity: 1 }); b(t, n); var a = t.find("li:eq(" + n.next + ")"); t.find(".caption").each(function () { e(this).stop(true, true) }); S(a, n); r(n, t) }) } function r(e, t) { e.cd = 0; var n = t.find(".tp-bannertimer"); if (n.length > 0) { n.stop(); n.css({ width: "0%" }); n.animate({ width: "100%" }, { duration: e.delay - 100, queue: false, easing: "linear" }) } clearTimeout(e.thumbtimer); e.thumbtimer = setTimeout(function () { o(t); h(t, e) }, 200) } function i(e, t) { e.cd = 0; w(t, e); var n = t.find(".tp-bannertimer"); if (n.length > 0) { n.stop(); n.css({ width: "0%" }); n.animate({ width: "100%" }, { duration: e.delay - 100, queue: false, easing: "linear" }) } } function s(n, r) { var s = n.parent(); if (r.navigationType == "thumb" || r.navsecond == "both") { s.append('<div class="tp-bullets tp-thumbs ' + r.navigationStyle + '"><div class="tp-mask"><div class="tp-thumbcontainer"></div></div></div>') } var a = s.find(".tp-bullets.tp-thumbs .tp-mask .tp-thumbcontainer"); var f = a.parent(); f.width(r.thumbWidth * r.thumbAmount); f.height(r.thumbHeight); f.parent().width(r.thumbWidth * r.thumbAmount); f.parent().height(r.thumbHeight); n.find("ul:first li").each(function (e) { var r = n.find("ul:first li:eq(" + e + ")"); if (r.data("thumb") != t) var i = r.data("thumb"); else var i = r.find("img:first").attr("src"); a.append('<div class="bullet thumb"><img src="' + i + '"></div>'); var s = a.find(".bullet:first") }); a.append('<div style="clear:both"></div>'); var l = 1e3; a.find(".bullet").each(function (t) { var s = e(this); if (t == r.slideamount - 1) s.addClass("last"); if (t == 0) s.addClass("first"); s.width(r.thumbWidth); s.height(r.thumbHeight); if (l > s.outerWidth(true)) l = s.outerWidth(true); s.click(function () { if (r.transition == 0 && s.index() != r.act) { r.next = s.index(); i(r, n) } }) }); var c = l * n.find("ul:first li").length; var h = a.parent().width(); r.thumbWidth = l; if (h < c) { e(document).mousemove(function (t) { e("body").data("mousex", t.pageX) }); a.parent().mouseenter(function () { var t = e(this); t.addClass("over"); var r = t.offset(); var i = e("body").data("mousex") - r.left; var s = t.width(); var o = t.find(".bullet:first").outerWidth(true); var a = o * n.find("ul:first li").length; var f = a - s + 15; var l = f / s; i = i - 30; var c = 0 - i * l; if (c > 0) c = 0; if (c < 0 - a + s) c = 0 - a + s; u(t, c, 200) }); a.parent().mousemove(function () { var t = e(this); var r = t.offset(); var i = e("body").data("mousex") - r.left; var s = t.width(); var o = t.find(".bullet:first").outerWidth(true); var a = o * n.find("ul:first li").length; var f = a - s + 15; var l = f / s; i = i - 30; var c = 0 - i * l; if (c > 0) c = 0; if (c < 0 - a + s) c = 0 - a + s; u(t, c, 0) }); a.parent().mouseleave(function () { var t = e(this); t.removeClass("over"); o(n) }) } } function o(e) { var t = e.parent().find(".tp-bullets.tp-thumbs .tp-mask .tp-thumbcontainer"); var n = t.parent(); var r = n.offset(); var i = n.find(".bullet:first").outerWidth(true); var s = n.find(".bullet.selected").index() * i; var o = n.width(); var i = n.find(".bullet:first").outerWidth(true); var a = i * e.find("ul:first li").length; var f = a - o; var l = f / o; var c = 0 - s; if (c > 0) c = 0; if (c < 0 - a + o) c = 0 - a + o; if (!n.hasClass("over")) { u(n, c, 200) } } function u(e, t, n) { e.stop(); e.find(".tp-thumbcontainer").animate({ left: t + "px" }, { duration: n, queue: false }) } function a(t, n) { if (n.navigationType == "bullet" || n.navigationType == "both") { t.parent().append('<div class="tp-bullets simplebullets ' + n.navigationStyle + '"></div>') } var r = t.parent().find(".tp-bullets"); t.find("ul:first li").each(function (e) { var n = t.find("ul:first li:eq(" + e + ") img:first").attr("src"); r.append('<div class="bullet"></div>'); var i = r.find(".bullet:first") }); r.find(".bullet").each(function (r) { var s = e(this); if (r == n.slideamount - 1) s.addClass("last"); if (r == 0) s.addClass("first"); s.click(function () { if (n.transition == 0 && s.index() != n.act) { n.next = s.index(); i(n, t) } }) }); r.append('<div style="clear:both"></div>'); h(t, n); e("#unvisible_button").click(function () { n.navigationArrows = e(".select_navarrows .selected").data("value"); n.navigationType = e(".select_navigationtype .selected").data("value"); n.hideThumbs = e(".select_navshow .selected").data("value"); t.data("hidethumbs", n.hideThumbs); var r = e(".select_bhposition .dragger"); n.navOffsetHorizontal = Math.round((r.data("max") - r.data("min")) * (r.position().left / 410) + r.data("min")); var i = e(".select_bvposition .dragger"); n.navOffsetVertical = Math.round((i.data("max") - i.data("min")) * (i.position().left / 410) + i.data("min")); var s = e(".select_slidetime .dragger"); n.delay2 = Math.round(((s.data("max") - s.data("min")) * (s.position().left / 410) + s.data("min")) * 1e3); if (n.delay2 != n.delay) { n.delay = n.delay2; n.origcd = n.delay; n.cd = 0; var o = t.find(".tp-bannertimer"); if (o.length > 0) { o.stop(); o.css({ width: "0%" }); o.animate({ width: "100%" }, { duration: n.delay - 100, queue: false, easing: "linear" }) } } n.onHoverStop = e(".select_hovers .selected").data("value"); h(t, n); setTimeout(function () { h(t, n) }, 100) }) } function f(e, t) { var n = e.find(".tp-bullets"); if (t.navigationArrow != "none") e.parent().append('<div class="tp-leftarrow tparrows ' + t.navigationStyle + '"></div>'); if (t.navigationArrow != "none") e.parent().append('<div class="tp-rightarrow tparrows ' + t.navigationStyle + '"></div>'); e.parent().find(".tp-rightarrow").click(function () { if (t.transition == 0) { t.next = t.next + 1; if (t.next == t.slideamount) t.next = 0; i(t, e) } }); e.parent().find(".tp-leftarrow").click(function () { if (t.transition == 0) { t.next = t.next - 1; if (t.next < 0) t.next = t.slideamount - 1; i(t, e) } }); h(e, t) } function l(e, t) { if (t.touchenabled == "on") e.swipe({ data: e, swipeRight: function () { if (t.transition == 0) { t.next = t.next - 1; if (t.next < 0) t.next = t.slideamount - 1; i(t, e) } }, swipeLeft: function () { if (t.transition == 0) { t.next = t.next + 1; if (t.next == t.slideamount) t.next = 0; i(t, e) } }, allowPageScroll: "auto" }) } function c(e, t) { var n = e.parent().find(".tp-bullets"); var r = e.parent().find(".tparrows"); if (n == null) { e.append('<div class=".tp-bullets"></div>'); var n = e.parent().find(".tp-bullets") } if (r == null) { e.append('<div class=".tparrows"></div>'); var r = e.parent().find(".tparrows") } e.data("hidethumbs", t.hideThumbs); try { n.css({ opacity: 0 }) } catch (i) { } try { r.css({ opacity: 0 }) } catch (i) { } n.hover(function () { n.addClass("hovered"); clearTimeout(e.data("hidethumbs")); n.cssAnimate({ opacity: 1 }, { duration: 200, queue: false }); r.animate({ opacity: 1 }, { duration: 200, queue: false }) }, function () { n.removeClass("hovered"); if (!e.hasClass("hovered") && !n.hasClass("hovered")) e.data("hidethumbs", setTimeout(function () { n.cssAnimate({ opacity: 0 }, { duration: 200, queue: false }); r.animate({ opacity: 0 }, { duration: 200, queue: false }) }, t.hideThumbs)) }); r.hover(function () { n.addClass("hovered"); clearTimeout(e.data("hidethumbs")); n.cssAnimate({ opacity: 1 }, { duration: 200, queue: false }); r.animate({ opacity: 1 }, { duration: 200, queue: false }) }, function () { n.removeClass("hovered"); if (!e.hasClass("hovered") && !n.hasClass("hovered")) e.data("hidethumbs", setTimeout(function () { n.cssAnimate({ opacity: 0 }, { duration: 200, queue: false }); r.animate({ opacity: 0 }, { duration: 200, queue: false }) }, t.hideThumbs)) }); e.live("mouseenter", function () { e.addClass("hovered"); clearTimeout(e.data("hidethumbs")); n.cssAnimate({ opacity: 1 }, { duration: 200, queue: false }); r.animate({ opacity: 1 }, { duration: 200, queue: false }) }); e.live("mouseleave", function () { e.removeClass("hovered"); if (!e.hasClass("hovered") && !n.hasClass("hovered")) e.data("hidethumbs", setTimeout(function () { n.cssAnimate({ opacity: 0 }, { duration: 200, queue: false }); r.animate({ opacity: 0 }, { duration: 200, queue: false }) }, t.hideThumbs)) }) } function h(t, n) { if (n.navigationType == "both") { n.navigationType = "bullet"; n.navsecond = "both" } if (n.navigationType == "none" && n.navigationArrows != "none") n.navigationArrows = "verticalcentered"; n.navOH = n.navOffsetHorizontal * n.bw; n.navOV = n.navOffsetVertical * n.bh; if (n.bw != 1) n.navOH = 0; var r = t.parent(); var i = r.find(".tp-leftarrow"); var s = r.find(".tp-rightarrow"); if (n.navigationType == "bullet") { var o = r.find(".tp-bullets.simplebullets"); o.css({ visibility: "visible" }); try { r.find(".tp-thumbs").css({ visibility: "hidden" }) } catch (u) { } var a = o.width(); if (!o.hasClass("tp-thumbs")) { a = 0; o.find(".bullet").each(function () { a = a + e(this).outerWidth(true) }); o.css({ width: a + "px" }) } var f = r.outerWidth() - n.width; o.css({ left: n.navOH + f / 2 + (n.width / 2 - a / 2) + "px", bottom: n.navOV + "px" }); if (n.navigationArrows == "nexttobullets") { i.removeClass("large"); s.removeClass("large"); i.removeClass("thumbswitharrow"); s.removeClass("thumbswitharrow"); i.css({ visibility: "visible" }); s.css({ visibility: "visible" }); var l = 0; i.css({ position: "absolute", left: o.position().left - i.outerWidth(true) + "px", top: o.position().top + "px" }); s.css({ position: "absolute", left: o.outerWidth(true) + o.position().left + "px", top: o.position().top + "px" }) } else { if (n.navigationArrows == "verticalcentered") { i.addClass("large"); s.addClass("large"); i.css({ visibility: "visible" }); s.css({ visibility: "visible" }); var c = r.outerHeight(); i.css({ position: "absolute", left: f / 2 + "px", top: c / 2 + "px" }); s.css({ position: "absolute", left: n.width - s.outerWidth() + f / 2 + "px", top: c / 2 + "px" }) } else { i.css({ visibility: "hidden" }); s.css({ visibility: "hidden" }) } } } else { if (n.navigationType == "thumb") { var h = r.find(".tp-thumbs"); try { r.find(".tp-bullets").css({ visibility: "hidden" }) } catch (u) { } h.css({ visibility: "visible" }); var c = h.parent().outerHeight(); var f = r.outerWidth() - n.width; h.css({ left: n.navOH + (n.width / 2 - h.width() / 2) + "px" }); h.css({ bottom: 0 - h.outerHeight(true) + n.navOV + "px" }); if (n.navigationArrows == "verticalcentered") { i.css({ visibility: "visible" }); s.css({ visibility: "visible" }); i.addClass("large"); s.addClass("large"); i.css({ position: "absolute", left: f / 2 + "px", top: r.outerHeight() / 2 + "px" }); s.css({ position: "absolute", left: n.width - s.outerWidth() + f / 2 + "px", top: r.outerHeight() / 2 + "px" }) } else { i.css({ visibility: "hidden" }); s.css({ visibility: "hidden" }) } } else { if (n.navigationType == "none") { try { r.find(".tp-bullets").css({ visibility: "hidden" }) } catch (u) { } try { r.find(".tp-thumbs").css({ visibility: "hidden" }) } catch (u) { } if (n.navigationArrows != "none") { var f = r.outerWidth() - n.width; i.css({ visibility: "visible" }); s.css({ visibility: "visible" }); i.addClass("large"); s.addClass("large"); i.css({ position: "absolute", left: f / 2 + "px", top: r.outerHeight() / 2 + "px" }); s.css({ position: "absolute", left: n.width - s.outerWidth() + f / 2 + "px", top: r.outerHeight() / 2 + "px" }) } else { i.css({ visibility: "hidden" }); s.css({ visibility: "hidden" }) } } } } } function p(e, n) { n.width = parseInt(n.container.width(), 0); n.height = parseInt(n.container.height(), 0); n.bw = n.width / n.startwidth; n.bh = n.height / n.startheight; if (n.bh > 1) { n.bw = 1; n.bh = 1 } if (e.data("orgw") != t) { e.width(e.data("orgw")); e.height(e.data("orgh")) } var r = n.width / e.width(); var i = n.height / e.height(); n.fw = r; n.fh = i; if (e.data("orgw") == t) { e.data("orgw", e.width()); e.data("orgh", e.height()) } if (n.fullWidth == "on") { var s = n.container.parent().width(); var o = n.container.parent().height(); var u = o / e.data("orgh"); var a = s / e.data("orgw"); e.width(e.width() * u); e.height(o); if (e.width() < s) { e.width(s + 50); var a = e.width() / e.data("orgw"); e.height(e.data("orgh") * a) } if (e.width() > s) { e.data("fxof", s / 2 - e.width() / 2); e.css({ position: "absolute", left: e.data("fxof") + "px" }) } } else { e.width(n.width); e.height(e.height() * r); if (e.height() < n.height && e.height() != 0 && e.height() != null) { e.height(n.height); e.width(e.data("orgw") * i) } } e.data("neww", e.width()); e.data("newh", e.height()); if (n.fullWidth == "on") { n.slotw = Math.ceil(e.width() / n.slots) } else { n.slotw = Math.ceil(n.width / n.slots) } n.sloth = Math.ceil(n.height / n.slots) } function d(n, r) { n.find(".caption").each(function () { e(this).addClass(e(this).data("transition")); e(this).addClass("start") }); n.find("ul:first >li").each(function (n) { var r = e(this); if (r.data("link") != t) { var i = r.data("link"); r.append('<div class="caption sft slidelink" data-x="0" data-y="0" data-start="0"><a href="' + i + '"><div></div></a></div>') } }); n.find("ul:first li >img").each(function (t) { var n = e(this); n.addClass("defaultimg"); p(n, r); n.wrap('<div class="slotholder"></div>'); n.css({ opacity: 0 }); n.data("li-id", t) }) } function v(e, n, r) { var i = e; var s = i.find("img"); p(s, n); var o = s.attr("src"); var u = s.data("neww"); var a = s.data("newh"); var f = s.data("fxof"); if (f == t) f = 0; var l = 0; if (!r) var l = 0 - n.slotw; for (var c = 0; c < n.slots; c++) i.append('<div class="slot" style="position:absolute;top:0px;left:' + (f + c * n.slotw) + "px;overflow:hidden;width:" + n.slotw + "px;height:" + a + 'px"><div class="slotslide" style="position:absolute;top:0px;left:' + l + "px;width:" + n.slotw + "px;height:" + a + 'px;overflow:hidden;"><img style="position:absolute;top:0px;left:' + (0 - c * n.slotw) + "px;width:" + u + "px;height:" + a + 'px" src="' + o + '"></div></div>') } function m(e, n, r) { var i = e; var s = i.find("img"); p(s, n); var o = s.attr("src"); var u = s.data("neww"); var a = s.data("newh"); var f = s.data("fxof"); if (f == t) f = 0; var l = 0; if (!r) var l = 0 - n.sloth; for (var c = 0; c < n.slots; c++) i.append('<div class="slot" style="position:absolute;top:' + c * n.sloth + "px;left:" + f + "px;overflow:hidden;width:" + u + "px;height:" + n.sloth + 'px"><div class="slotslide" style="position:absolute;top:' + l + "px;left:0px;width:" + u + "px;height:" + n.sloth + 'px;overflow:hidden;"><img style="position:absolute;top:' + (0 - c * n.sloth) + "px;left:0px;width:" + u + "px;height:" + a + 'px" src="' + o + '"></div></div>') } function g(e, n, r) { var i = e; var s = i.find("img"); p(s, n); var o = s.attr("src"); var u = s.data("neww"); var a = s.data("newh"); var f = s.data("fxof"); if (f == t) f = 0; var l = 0; var c = 0; if (n.sloth > n.slotw) c = n.sloth; else c = n.slotw; if (!r) { var l = 0 - c } n.slotw = c; n.sloth = c; var h = 0; var d = 0; for (var v = 0; v < n.slots; v++) { d = 0; for (var m = 0; m < n.slots; m++) { i.append('<div class="slot" ' + 'style="position:absolute;' + "top:" + d + "px;" + "left:" + (f + h) + "px;" + "width:" + c + "px;" + "height:" + c + "px;" + 'overflow:hidden;">' + '<div class="slotslide" data-x="' + h + '" data-y="' + d + '" ' + 'style="position:absolute;' + "top:" + 0 + "px;" + "left:" + 0 + "px;" + "width:" + c + "px;" + "height:" + c + "px;" + 'overflow:hidden;">' + '<img style="position:absolute;' + "top:" + (0 - d) + "px;" + "left:" + (0 - h) + "px;" + "width:" + u + "px;" + "height:" + a + 'px"' + 'src="' + o + '"></div></div>'); d = d + c } h = h + c } } function y(t) { t.find(".slotholder .slot").each(function () { clearTimeout(e(this).data("tout")); e(this).remove() }) } function b(e, t) { var n = e.find("li:eq(" + t.act + ")"); var r = e.find("li:eq(" + t.next + ")"); var i = r.find(".caption"); if (i.find("iframe") == 0) { if (i.hasClass("hcenter")) i.css({ height: t.height + "px", top: "0px", left: t.width / 2 - i.outerWidth() / 2 + "px" }); else if (i.hasClass("vcenter")) i.css({ width: t.width + "px", left: "0px", top: t.height / 2 - i.outerHeight() / 2 + "px" }) } } function w(n, r) { r.transition = 1; var i = n.find("li:eq(" + r.act + ")"); var s = n.find("li:eq(" + r.next + ")"); var u = i.find(".slotholder"); var a = s.find(".slotholder"); i.css({ visibility: "visible" }); s.css({ visibility: "visible" }); if (e.browser.msie && e.browser.version < 9) { if (s.data("transition") == "boxfade") s.data("transition", "boxslide"); if (s.data("transition") == "slotfade-vertical") s.data("transition", "slotzoom-vertical"); if (s.data("transition") == "slotfade-horizontal") s.data("transition", "slotzoom-horizontal") } if (s.data("delay") != t) { r.cd = 0; r.delay = s.data("delay") } else { r.delay = r.origcd } i.css({ left: "0px", top: "0px" }); s.css({ left: "0px", top: "0px" }); n.parent().find(".bullet").each(function () { var t = e(this); t.removeClass("selected"); if (t.index() == r.next) t.addClass("selected") }); n.find("li").each(function () { var t = e(this); if (t.index != r.act && t.index != r.next) t.css({ "z-index": 16 }) }); i.css({ "z-index": 18 }); s.css({ "z-index": 20 }); s.css({ opacity: 0 }); E(i, r); S(s, r); if (s.data("slotamount") == t || s.data("slotamount") < 1) { r.slots = Math.round(Math.random() * 12 + 4); if (s.data("transition") == "boxslide") r.slots = Math.round(Math.random() * 6 + 3) } else { r.slots = s.data("slotamount") } if (s.data("transition") == "boxslide") { if (r.slots > 15) r.slots = 15; s.css({ opacity: 1 }); g(u, r, true); g(a, r, false); a.find(".defaultimg").css({ opacity: 0 }); a.find(".slotslide").each(function (t) { var i = e(this); i.css({ top: 0 - r.sloth + "px", left: 0 - r.slotw + "px" }); setTimeout(function () { if (r.firefox13) i.animate({ top: "0px", left: "0px" }, { duration: 400, queue: false, complete: function () { if (t == r.slots * r.slots - 1) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } } }); else i.cssAnimate({ top: "0px", left: "0px" }, { duration: 400, queue: false, complete: function () { if (t == r.slots * r.slots - 1) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.act = r.next; r.transition = 0; o(n) } } }) }, t * 15) }) } if (s.data("transition") == "boxfade") { if (r.slots > 15) r.slots = 15; s.css({ opacity: 1 }); g(a, r, false); a.find(".defaultimg").css({ opacity: 0 }); a.find(".slotslide").each(function (t) { var i = e(this); i.css({ opacity: 0 }); i.find("img").css({ opacity: 0 }); i.find("img").css({ top: Math.random() * r.slotw - r.slotw + "px", left: Math.random() * r.slotw - r.slotw + "px" }); var s = Math.random() * 1e3 + 500; if (t == r.slots * r.slots - 1) s = 1500; if (r.firefox13) { i.find("img").animate({ opacity: 1, top: 0 - i.data("y") + "px", left: 0 - i.data("x") + "px" }, { duration: s, queue: false }); i.animate({ opacity: 1 }, { duration: s, queue: false, complete: function () { if (t == r.slots * r.slots - 1) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } } }) } else { i.find("img").cssAnimate({ opacity: 1, top: 0 - i.data("y") + "px", left: 0 - i.data("x") + "px" }, { duration: s, queue: false }); i.cssAnimate({ opacity: 1 }, { duration: s, queue: false, complete: function () { if (t == r.slots * r.slots - 1) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.act = r.next; r.transition = 0; o(n) } } }) } }) } if (s.data("transition") == "slotslide-horizontal") { s.css({ opacity: 1 }); v(u, r, true); v(a, r, false); a.find(".defaultimg").css({ opacity: 0 }); u.find(".slotslide").each(function () { var t = e(this); if (r.firefox13) { t.animate({ left: r.slotw + "px" }, { duration: 500, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } }) } else { t.cssAnimate({ left: r.slotw + "px" }, { duration: 500, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } }) } }); a.find(".slotslide").each(function () { var t = e(this); t.css({ left: 0 - r.slotw + "px" }); if (r.firefox13) { t.animate({ left: "0px" }, { duration: 500, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.act = r.next; r.transition = 0; o(n) } }) } else { t.cssAnimate({ left: "0px" }, { duration: 500, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } }) } }) } if (s.data("transition") == "slotslide-vertical") { s.css({ opacity: 1 }); m(u, r, true); m(a, r, false); a.find(".defaultimg").css({ opacity: 0 }); u.find(".slotslide").each(function () { var t = e(this); if (r.firefox13) { t.animate({ top: r.sloth + "px" }, { duration: 500, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } }) } else { t.cssAnimate({ top: r.sloth + "px" }, { duration: 500, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.act = r.next; r.transition = 0; o(n) } }) } }); a.find(".slotslide").each(function () { var t = e(this); t.css({ top: 0 - r.sloth + "px" }); if (r.firefox13) { t.animate({ top: "0px" }, { duration: 500, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } }) } else { t.cssAnimate({ top: "0px" }, { duration: 500, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.act = r.next; r.transition = 0; o(n) } }) } }) } if (s.data("transition") == "curtain-1") { s.css({ opacity: 1 }); v(u, r, true); v(a, r, true); a.find(".defaultimg").css({ opacity: 0 }); u.find(".defaultimg").css({ opacity: 0 }); u.find(".slotslide").each(function (t) { var n = e(this); n.cssAnimate({ top: 0 + r.height + "px", opacity: 1 }, { duration: 300 + t * (70 - r.slots), queue: false, complete: function () { } }) }); a.find(".slotslide").each(function (t) { var i = e(this); i.css({ top: 0 - r.height + "px", opacity: 0 }); if (r.firefox13) { i.animate({ top: "0px", opacity: 1 }, { duration: 300 + t * (70 - r.slots), queue: false, complete: function () { if (t == r.slots - 1) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } } }) } else { i.cssAnimate({ top: "0px", opacity: 1 }, { duration: 300 + t * (70 - r.slots), queue: false, complete: function () { if (t == r.slots - 1) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.act = r.next; r.transition = 0; o(n) } } }) } }) } if (s.data("transition") == "curtain-2") { s.css({ opacity: 1 }); v(u, r, true); v(a, r, true); a.find(".defaultimg").css({ opacity: 0 }); u.find(".defaultimg").css({ opacity: 0 }); u.find(".slotslide").each(function (t) { var n = e(this); if (r.firefox13) { n.animate({ top: 0 + r.height + "px", opacity: 1 }, { duration: 300 + (r.slots - t) * (70 - r.slots), queue: false, complete: function () { } }) } else { n.cssAnimate({ top: 0 + r.height + "px", opacity: 1 }, { duration: 300 + (r.slots - t) * (70 - r.slots), queue: false, complete: function () { } }) } }); a.find(".slotslide").each(function (t) { var i = e(this); i.css({ top: 0 - r.height + "px", opacity: 0 }); if (r.firefox13) { i.animate({ top: "0px", opacity: 1 }, { duration: 300 + (r.slots - t) * (70 - r.slots), queue: false, complete: function () { if (t == 0) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } } }) } else { i.cssAnimate({ top: "0px", opacity: 1 }, { duration: 300 + (r.slots - t) * (70 - r.slots), queue: false, complete: function () { if (t == 0) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.act = r.next; r.transition = 0; o(n) } } }) } }) } if (s.data("transition") == "curtain-3") { s.css({ opacity: 1 }); if (r.slots < 2) r.slots = 2; v(u, r, true); v(a, r, true); a.find(".defaultimg").css({ opacity: 0 }); u.find(".defaultimg").css({ opacity: 0 }); u.find(".slotslide").each(function (t) { var n = e(this); if (t < r.slots / 2) var i = (t + 2) * 60; else var i = (2 + r.slots - t) * 60; if (r.firefox13) { n.animate({ top: 0 + r.height + "px", opacity: 1 }, { duration: 300 + i, queue: false, complete: function () { } }) } else { n.cssAnimate({ top: 0 + r.height + "px", opacity: 1 }, { duration: 300 + i, queue: false, complete: function () { } }) } }); a.find(".slotslide").each(function (t) { var i = e(this); i.css({ top: 0 - r.height + "px", opacity: 0 }); if (t < r.slots / 2) var s = (t + 2) * 60; else var s = (2 + r.slots - t) * 60; if (r.firefox13) { i.animate({ top: "0px", opacity: 1 }, { duration: 300 + s, queue: false, complete: function () { if (t == Math.round(r.slots / 2)) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.act = r.next; r.transition = 0; o(n) } } }) } else { i.cssAnimate({ top: "0px", opacity: 1 }, { duration: 300 + s, queue: false, complete: function () { if (t == Math.round(r.slots / 2)) { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.act = r.next; r.transition = 0; o(n) } } }) } }) } if (s.data("transition") == "slotzoom-horizontal") { s.css({ opacity: 1 }); v(u, r, true); v(a, r, true); a.find(".defaultimg").css({ opacity: 0 }); u.find(".slotslide").each(function () { var t = e(this).find("img"); if (r.firefox13) { t.animate({ left: 0 - r.slotw / 2 + "px", top: 0 - r.height / 2 + "px", width: r.slotw * 2 + "px", height: r.height * 2 + "px", opacity: 0 }, { duration: 1e3, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.transition = 0; r.act = r.next; o(n) } }) } else { t.cssAnimate({ left: 0 - r.slotw / 2 + "px", top: 0 - r.height / 2 + "px", width: r.slotw * 2 + "px", height: r.height * 2 + "px", opacity: 0 }, { duration: 1e3, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.transition = 0; r.act = r.next; o(n) } }) } }); a.find(".slotslide").each(function (t) { var n = e(this).find("img"); n.css({ left: 0 + "px", top: 0 + "px", opacity: 0 }); if (r.firefox13) { n.animate({ left: 0 - t * r.slotw + "px", top: 0 + "px", width: a.find(".defaultimg").data("neww") + "px", height: a.find(".defaultimg").data("newh") + "px", opacity: 1 }, { duration: 1e3, queue: false }) } else { n.cssAnimate({ left: 0 - t * r.slotw + "px", top: 0 + "px", width: a.find(".defaultimg").data("neww") + "px", height: a.find(".defaultimg").data("newh") + "px", opacity: 1 }, { duration: 1e3, queue: false }) } }) } if (s.data("transition") == "slotzoom-vertical") { s.css({ opacity: 1 }); m(u, r, true); m(a, r, true); a.find(".defaultimg").css({ opacity: 0 }); u.find(".slotslide").each(function () { var t = e(this).find("img"); if (r.firefox13) { t.animate({ left: 0 - r.width / 2 + "px", top: 0 - r.sloth / 2 + "px", width: r.width * 2 + "px", height: r.sloth * 2 + "px", opacity: 0 }, { duration: 1e3, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.transition = 0; r.act = r.next; o(n) } }) } else { t.cssAnimate({ left: 0 - r.width / 2 + "px", top: 0 - r.sloth / 2 + "px", width: r.width * 2 + "px", height: r.sloth * 2 + "px", opacity: 0 }, { duration: 1e3, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.transition = 0; r.act = r.next; o(n) } }) } }); a.find(".slotslide").each(function (t) { var n = e(this).find("img"); n.css({ left: 0 + "px", top: 0 + "px", opacity: 0 }); if (r.firefox13) { n.animate({ left: 0 + "px", top: 0 - t * r.sloth + "px", width: a.find(".defaultimg").data("neww") + "px", height: a.find(".defaultimg").data("newh") + "px", opacity: 1 }, { duration: 1e3, queue: false }) } else { n.cssAnimate({ left: 0 + "px", top: 0 - t * r.sloth + "px", width: a.find(".defaultimg").data("neww") + "px", height: a.find(".defaultimg").data("newh") + "px", opacity: 1 }, { duration: 1e3, queue: false }) } }) } if (s.data("transition") == "slotfade-horizontal") { s.css({ opacity: 1 }); r.slots = r.width / 20; v(a, r, true); a.find(".defaultimg").css({ opacity: 0 }); var f = 0; a.find(".slotslide").each(function (t) { var n = e(this); f++; n.css({ opacity: 0 }); n.data("tout", setTimeout(function () { n.animate({ opacity: 1 }, { duration: 300, queue: false }) }, t * 4)) }); setTimeout(function () { r.transition = 0; r.act = r.next; o(n) }, 300 + f * 4) } if (s.data("transition") == "slotfade-vertical") { s.css({ opacity: 1 }); r.slots = r.height / 20; m(a, r, true); a.find(".defaultimg").css({ opacity: 0 }); var f = 0; a.find(".slotslide").each(function (t) { var n = e(this); f++; n.css({ opacity: 0 }); n.data("tout", setTimeout(function () { n.animate({ opacity: 1 }, { duration: 300, queue: false }) }, t * 4)) }); setTimeout(function () { r.transition = 0; r.act = r.next; o(n) }, 300 + f * 4) } if (s.data("transition") == "fade") { s.css({ opacity: 1 }); r.slots = 1; v(a, r, true); a.find(".defaultimg").css({ opacity: 0 }); var f = 0; a.find(".slotslide").each(function (t) { var n = e(this); f++; n.css({ opacity: 0 }); n.animate({ opacity: 1 }, { duration: 300, queue: false }) }); setTimeout(function () { r.transition = 0; r.act = r.next; o(n) }, 300) } if (s.data("transition") == "slideleft" || s.data("transition") == "slideup" || s.data("transition") == "slidedown" || s.data("transition") == "slideright") { s.css({ opacity: 1 }); r.slots = 1; v(a, r, true); v(u, r, true); u.find(".defaultimg").css({ opacity: 0 }); a.find(".defaultimg").css({ opacity: 0 }); var l = r.width; var c = r.height; if (r.fullWidth == "on") { l = r.container.parent().width(); c = r.container.parent().height() } var h = a.find(".slotslide"); if (s.data("transition") == "slideleft") h.css({ left: l + "px" }); else if (s.data("transition") == "slideright") h.css({ left: 0 - r.width + "px" }); else if (s.data("transition") == "slideup") h.css({ top: c + "px" }); else if (s.data("transition") == "slidedown") h.css({ top: 0 - r.height + "px" }); if (r.firefox13) { h.animate({ left: "0px", top: "0px", opacity: 1 }, { duration: 1e3, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); r.transition = 0; r.act = r.next; o(n) } }) } else { h.cssAnimate({ left: "0px", top: "0px", opacity: 1 }, { duration: 1e3, queue: false, complete: function () { y(n); a.find(".defaultimg").css({ opacity: 1 }); u.find(".defaultimg").css({ opacity: 0 }); if (e.browser.msie && e.browser.version < 9) u.find(".defaultimg").css({ opacity: 1 }); r.transition = 0; r.act = r.next; o(n) } }) } var p = u.find(".slotslide"); if (r.firefox13) { if (s.data("transition") == "slideleft") p.animate({ left: 0 - l + "px", opacity: 1 }, { duration: 1e3, queue: false }); else if (s.data("transition") == "slideright") p.animate({ left: l + "px", opacity: 1 }, { duration: 1e3, queue: false }); else if (s.data("transition") == "slideup") p.animate({ top: 0 - c + "px", opacity: 1 }, { duration: 1e3, queue: false }); else if (s.data("transition") == "slidedown") p.animate({ top: c + "px", opacity: 1 }, { duration: 1e3, queue: false }) } else { if (s.data("transition") == "slideleft") p.cssAnimate({ left: 0 - l + "px", opacity: 1 }, { duration: 1e3, queue: false }); else if (s.data("transition") == "slideright") p.cssAnimate({ left: l + "px", opacity: 1 }, { duration: 1e3, queue: false }); else if (s.data("transition") == "slideup") p.cssAnimate({ top: 0 - c + "px", opacity: 1 }, { duration: 1e3, queue: false }); else if (s.data("transition") == "slidedown") p.cssAnimate({ top: c + "px", opacity: 1 }, { duration: 1e3, queue: false }) } } } function E(e, t) { e.find(".caption").each(function (t) { var n = e.find(".caption:eq(" + t + ")"); n.stop(true, true); clearTimeout(n.data("timer")); var r = n.data("easing"); r = "easeInOutSine"; var i = n.data("repx"); var s = n.data("repy"); var o = n.data("repo"); if (n.find("iframe").length > 0) { var u = n.find("iframe").parent(); var a = u.html(); setTimeout(function () { n.find("iframe").remove(); u.append(a) }, n.data("speed")) } try { n.animate({ opacity: o, left: i + "px", top: s + "px" }, { duration: n.data("speed"), easing: r }) } catch (f) { } }) } function S(e, n) { e.find(".caption").each(function (r) { offsetx = n.width / 2 - n.startwidth / 2; if (n.bh > 1) { n.bw = 1; n.bh = 1 } var i = n.bw; var s = e.find(".caption:eq(" + r + ")"); s.stop(true, true); if (s.hasClass("coloredbg")) offsetx = 0; if (offsetx < 0) offsetx = 0; clearTimeout(s.data("timer")); var o = 0; var u = 0; if (s.find("img").length > 0) { var a = s.find("img"); if (a.data("ww") == t) a.data("ww", a.width()); if (a.data("hh") == t) a.data("hh", a.height()); var f = a.data("ww"); var l = a.data("hh"); a.width(f * n.bw); a.height(l * n.bh); o = a.width(); u = a.height() } else { if (s.find("iframe").length > 0) { var a = s.find("iframe"); if (s.data("ww") == t) { s.data("ww", a.width()) } if (s.data("hh") == t) s.data("hh", a.height()); var f = s.data("ww"); var l = s.data("hh"); var c = s; if (c.data("fsize") == t) c.data("fsize", parseInt(c.css("font-size"), 0) || 0); if (c.data("pt") == t) c.data("pt", parseInt(c.css("paddingTop"), 0) || 0); if (c.data("pb") == t) c.data("pb", parseInt(c.css("paddingBottom"), 0) || 0); if (c.data("pl") == t) c.data("pl", parseInt(c.css("paddingLeft"), 0) || 0); if (c.data("pr") == t) c.data("pr", parseInt(c.css("paddingRight"), 0) || 0); if (c.data("mt") == t) c.data("mt", parseInt(c.css("marginTop"), 0) || 0); if (c.data("mb") == t) c.data("mb", parseInt(c.css("marginBottom"), 0) || 0); if (c.data("ml") == t) c.data("ml", parseInt(c.css("marginLeft"), 0) || 0); if (c.data("mr") == t) c.data("mr", parseInt(c.css("marginRight"), 0) || 0); if (c.data("bt") == t) c.data("bt", parseInt(c.css("borderTop"), 0) || 0); if (c.data("bb") == t) c.data("bb", parseInt(c.css("borderBottom"), 0) || 0); if (c.data("bl") == t) c.data("bl", parseInt(c.css("borderLeft"), 0) || 0); if (c.data("br") == t) c.data("br", parseInt(c.css("borderRight"), 0) || 0); if (c.data("lh") == t) c.data("lh", parseInt(c.css("lineHeight"), 0) || 0); s.css({ "font-size": c.data("fsize") * n.bw + "px", "padding-top": c.data("pt") * n.bh + "px", "padding-bottom": c.data("pb") * n.bh + "px", "padding-left": c.data("pl") * n.bw + "px", "padding-right": c.data("pr") * n.bw + "px", "margin-top": c.data("mt") * n.bh + "px", "margin-bottom": c.data("mb") * n.bh + "px", "margin-left": c.data("ml") * n.bw + "px", "margin-right": c.data("mr") * n.bw + "px", "border-top": c.data("bt") * n.bh + "px", "border-bottom": c.data("bb") * n.bh + "px", "border-left": c.data("bl") * n.bw + "px", "border-right": c.data("br") * n.bw + "px", "line-height": c.data("lh") * n.bh + "px", height: l * n.bh + "px", "white-space": "nowrap" }); a.width(f * n.bw); a.height(l * n.bh); o = a.width(); u = a.height() } else { var c = s; if (c.data("fsize") == t) c.data("fsize", parseInt(c.css("font-size"), 0) || 0); if (c.data("pt") == t) c.data("pt", parseInt(c.css("paddingTop"), 0) || 0); if (c.data("pb") == t) c.data("pb", parseInt(c.css("paddingBottom"), 0) || 0); if (c.data("pl") == t) c.data("pl", parseInt(c.css("paddingLeft"), 0) || 0); if (c.data("pr") == t) c.data("pr", parseInt(c.css("paddingRight"), 0) || 0); if (c.data("mt") == t) c.data("mt", parseInt(c.css("marginTop"), 0) || 0); if (c.data("mb") == t) c.data("mb", parseInt(c.css("marginBottom"), 0) || 0); if (c.data("ml") == t) c.data("ml", parseInt(c.css("marginLeft"), 0) || 0); if (c.data("mr") == t) c.data("mr", parseInt(c.css("marginRight"), 0) || 0); if (c.data("bt") == t) c.data("bt", parseInt(c.css("borderTop"), 0) || 0); if (c.data("bb") == t) c.data("bb", parseInt(c.css("borderBottom"), 0) || 0); if (c.data("bl") == t) c.data("bl", parseInt(c.css("borderLeft"), 0) || 0); if (c.data("br") == t) c.data("br", parseInt(c.css("borderRight"), 0) || 0); if (c.data("lh") == t) c.data("lh", parseInt(c.css("lineHeight"), 0) || 0); s.css({ "font-size": c.data("fsize") * n.bw + "px", "padding-top": c.data("pt") * n.bh + "px", "padding-bottom": c.data("pb") * n.bh + "px", "padding-left": c.data("pl") * n.bw + "px", "padding-right": c.data("pr") * n.bw + "px", "margin-top": c.data("mt") * n.bh + "px", "margin-bottom": c.data("mb") * n.bh + "px", "margin-left": c.data("ml") * n.bw + "px", "margin-right": c.data("mr") * n.bw + "px", "border-top": c.data("bt") * n.bh + "px", "border-bottom": c.data("bb") * n.bh + "px", "border-left": c.data("bl") * n.bw + "px", "border-right": c.data("br") * n.bw + "px", "line-height": c.data("lh") * n.bh + "px", "white-space": "nowrap" }); u = s.outerHeight(true); o = s.outerWidth(true) } } if (s.hasClass("fade")) { s.css({ opacity: 0, left: i * s.data("x") + offsetx + "px", top: n.bh * s.data("y") + "px" }) } if (s.hasClass("lfr")) { s.css({ opacity: 1, left: 5 + n.width + "px", top: n.bh * s.data("y") + "px" }) } if (s.hasClass("lfl")) { s.css({ opacity: 1, left: -5 - o + "px", top: n.bh * s.data("y") + "px" }) } if (s.hasClass("sfl")) { s.css({ opacity: 0, left: i * s.data("x") - 50 + offsetx + "px", top: n.bh * s.data("y") + "px" }) } if (s.hasClass("sfr")) { s.css({ opacity: 0, left: i * s.data("x") + 50 + offsetx + "px", top: n.bh * s.data("y") + "px" }) } if (s.hasClass("lft")) { s.css({ opacity: 1, left: i * s.data("x") + offsetx + "px", top: -5 - u + "px" }) } if (s.hasClass("lfb")) { s.css({ opacity: 1, left: i * s.data("x") + offsetx + "px", top: 5 + n.height + "px" }) } if (s.hasClass("sft")) { s.css({ opacity: 0, left: i * s.data("x") + offsetx + "px", top: n.bh * s.data("y") - 50 + "px" }) } if (s.hasClass("sfb")) { s.css({ opacity: 0, left: i * s.data("x") + offsetx + "px", top: n.bh * s.data("y") + 50 + "px" }) } s.data("timer", setTimeout(function () { if (s.hasClass("fade")) { s.animate({ opacity: 1 }) } if (s.hasClass("lfr") || s.hasClass("lfl") || s.hasClass("sfr") || s.hasClass("sfl") || s.hasClass("lft") || s.hasClass("lfb") || s.hasClass("sft") || s.hasClass("sfb")) { var e = s.data("easing"); if (e == t) e = "linear"; s.data("repx", s.position().left); s.data("repy", s.position().top); s.data("repo", s.css("opacity")); s.animate({ opacity: 1, left: i * s.data("x") + offsetx + "px", top: n.bh * s.data("y") + "px" }, { duration: s.data("speed"), easing: e }) } }, s.data("start"))) }) } function x(e, t) { t.cd = 0; var n = e.find(".tp-bannertimer"); if (n.length > 0) { n.css({ width: "0%" }); n.animate({ width: "100%" }, { duration: t.delay - 100, queue: false, easing: "linear" }) } t.cdint = setInterval(function () { if (t.conthover != 1) t.cd = t.cd + 100; if (t.cd >= t.delay) { t.cd = 0; t.act = t.next; t.next = t.next + 1; if (t.next > e.find(">ul >li").length - 1) t.next = 0; w(e, t); if (n.length > 0) { n.css({ width: "0%" }); n.animate({ width: "100%" }, { duration: t.delay - 100, queue: false, easing: "linear" }) } } }, 100); e.hover(function () { if (t.onHoverStop == "on") { t.conthover = 1; n.stop() } }, function () { if (t.onHoverStop == "on") { t.conthover = 0; n.animate({ width: "100%" }, { duration: t.delay - t.cd - 100, queue: false, easing: "linear" }) } }) } e.fn.extend({ revolution: function (r) { var i = { delay: 9e3, startheight: 490, startwidth: 890, hideThumbs: 200, thumbWidth: 100, thumbHeight: 50, thumbAmount: 5, navigationType: "both", navigationArrows: "nexttobullets", navigationStyle: "square", touchenabled: "on", onHoverStop: "on", navOffsetHorizontal: 0, navOffsetVertical: 20, shadow: 1 }; r = e.extend({}, e.fn.revolution.defaults, r); return this.each(function () { var i = r; i.slots = 4; i.act = -1; i.next = 0; i.origcd = i.delay; i.firefox13 = e.browser.mozilla && parseInt(e.browser.version, 0) == 13; if (i.navOffsetHorizontal == t) i.navOffsetHorizontal = 0; if (i.navOffsetVertical == t) i.navOffsetVertical = 0; i.navOH = i.navOffsetHorizontal; i.navOV = i.navOffsetVertical; var o = e(this); o.append('<div class="tp-loader"></div>'); var u = o.find(".tp-bannertimer"); if (u.length > 0) { u.css({ width: "0%" }) } o.addClass("tp-simpleresponsive"); i.container = o; i.slideamount = o.find("ul:first li").length; if (i.startwidth == t || i.startwidth == 0) i.startwidth = o.width(); if (i.startheight == t || i.startheight == 0) i.startheight = o.height(); i.width = o.width(); i.height = o.height(); i.bw = i.startwidth / o.width(); i.bh = i.startheight / o.height(); if (i.width != i.startwidth) { i.height = Math.round(i.startheight * (i.width / i.startwidth)); o.height(i.height) } if (i.shadow != 0) { o.parent().append('<div class="tp-bannershadow tp-shadow' + i.shadow + '"></div>'); o.parent().find(".tp-bannershadow").css({ width: i.width }) } o.waitForImages(function () { d(o, i); a(o, i); s(o, i); f(o, i); l(o, i); if (i.hideThumbs > 0) c(o, i); o.waitForImages(function () { o.find(".tp-loader").fadeOut(400); setTimeout(function () { w(o, i); x(o, i) }, 1e3) }) }); e(window).resize(function () { if (o.outerWidth(true) != i.width) { n(o, i) } }) }) } }) })(jQuery)